# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  clean: true
  persistCredentials: true
  displayName: 'check out branch'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'github-user-options.json'
  name: GitHubUserOptions
  displayName: 'retrieve GitHub user options'

- task: oneLuckiDevJson2Variable@1
  inputs:
    jsonFile: '$(GitHubUserOptions.secureFilePath)'
    shouldPrefixVariables: false
  displayName: 'parse GitHub user options'

- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    git config --global user.email '$(gitUserEmail)'
    git config --global user.name '$(gitUserName)'
    npm version patch -m 'Bump version to %s [skip ci]'
  displayName: 'npm bump version'

- script: |
    npm install
  displayName: 'npm build'

- script: |
    git push origin HEAD:master
  displayName: 'push bumped version to origin repo'

- task: oneLuckiDevJson2Variable@1
  inputs:
    jsonFile: '$(System.DefaultWorkingDirectory)/package.json'
    shouldPrefixVariables: true
    variablePrefix: 'packageJson'
  displayName: 'read information from package.json'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      package.json
      **.md
    TargetFolder: '$(System.DefaultWorkingDirectory)/dist'
    OverWrite: true
  displayName: 'copy static files to output directory'



- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/dist'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true
  displayName: 'deploy output directory contents to artifact stage'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_shuebner20'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(packageJson.version)'
    releaseNotesSource: 'inline'
    isDraft: true
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
  displayName: 'create release at GitHub'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: '$(System.DefaultWorkingDirectory)/dist'
    publishRegistry: 'useFeed'
    publishFeed: '2ecdc2b4-96cd-42e2-b46d-52fd45177053/56115eca-361e-4c4a-a490-94c430a57cb7'
  enabled: false